service: finops-backend

frameworkVersion: '3'
configValidationMode: error

provider:
  name: aws
  stackName: ${param:APPLICATION_ENV}-coreService-backend-stack  # Corrected syntax
  stackTags:
    STAGE: ${param:APPLICATION_ENV}
    Project: "finopsreport"
    Subproject: "backend"
  runtime: nodejs20.x
  stage: ${opt:stage, 'dev'}
  region: ${param:REGION}
  deploymentBucket:
    name: ${param:DEPLOYMENT_BUCKET}
  environment:
    APPLICATION_ENV: ${param:APPLICATION_ENV}
    REGION: ${param:REGION}
  layers:
    - { Ref: LambdaDependenciesLambdaLayer }
  apiGateway:
    binaryMediaTypes:
      - "image/*"
      - "application/pdf"
      - "application/msword"
      - "multipart/form-data"
  versionFunctions: true   # Enable versioning globally (correct place)
  iam:
    role:
      name: ${param:APPLICATION_ENV}-coreService-backend-role
      statements:
        # Your IAM statements as provided ...

  tags:
    Project_name: finOps
    Created_for: finOps-backend-resource
    Created_by: finOps-team

custom:
  envfile: ${file(./env/dev-env.yml)}
  prefix: ${param:APPLICATION_ENV}
  export-env:
    enableOffline: true
  serverless-offline:
    host: localhost
    httpPort: 5000
    lambdaPort: 6000
  logRetentionInDays: ${self:custom.envfile.DEFAULT_LAMBDA_LOG_RETENTION_IN_DAYS, 90}

package:
  individually: true
  excludeDevDependencies: true
  patterns:
    - "!src/**"
    - "!env/**"
    - "!README.md"
    - "!serverless.yml"

layers:
  LambdaDependencies:
    path: layers/
    name: finopsreport-${param:APPLICATION_ENV}-LambdaDependencies
    description: Lambda dependencies for finops app Lambda Functions
    compatibleRuntimes:
      - nodejs20.x
    compatibleArchitectures:
      - x86_64
    licenseInfo: GPLv3
    retain: false

functions:
  codeDeploylambda1:
    name: ${param:APPLICATION_ENV}-codedeploy-lambda1
    handler: src/index1.handler
    package:
      patterns:
        - src/**
    timeout: 30
    events:
      - http:
          path: /trigger/lambda1/
          method: POST
          cors: true

  codeDeploylambda2:
    name: ${param:APPLICATION_ENV}-codedeploy-lambda2
    handler: src/index2.handler
    package:
      patterns:
        - src/**
    timeout: 30
    events:
      - http:
          path: /trigger/lambda2/
          method: get
          cors: true
